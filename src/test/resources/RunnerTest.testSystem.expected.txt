in before
in before each
.in after each
in before each
.Ein after each
in before each
.in after each
in before each
.Ein after each
in before each
.Ein after each
in before each
.Ein after each
in before each
.in after each
in before each
.Ein after each
in before each
.in after each
in before each
.Ein after each
in before each
.in after each
in before each
.in after each
in before each
.Ein after each
in before each
.Ein after each
in before each
.in after each
in before each
.Ein after each
in before each
.in after each
in before each
.in after each
in before each
.Ein after each
in after

Time:
There were 10 failures:
1) it should pass when any().keys() used and map contains keys (fail)(com.flarestar.bdd.tests.functional.tests.CalculatorTest)
java.lang.AssertionError:
Expected: map contains any key in ["notkey1", "notkey2"]
     but: was <{key3=val3, key2=val2, key1=val1}>
2) it should not fail this assertion (fail)(com.flarestar.bdd.tests.functional.tests.CalculatorTest)
java.lang.AssertionError
3) it should subtract two values correctly (fail)(com.flarestar.bdd.tests.functional.tests.CalculatorTest)
java.lang.AssertionError: expected:<-4> but was:<38>
4) it should pass when have().all().keys() used and map contains all keys (fail)(com.flarestar.bdd.tests.functional.tests.CalculatorTest)
java.lang.AssertionError:
Expected: map contains all keys in ["key1", "key3"]
     but: was <{key3=val3, key2=val2, key1=val1}>
5) it should pass when instanceOf() used (fail)(com.flarestar.bdd.tests.functional.tests.CalculatorTest)
java.lang.AssertionError:
Expected: an instance of com.flarestar.bdd.tests.functional.tests.Calculator
     but: <java.lang.Object@...> is a java.lang.Object
6) it should pass when all().keys() used and map contains keys (fail)(com.flarestar.bdd.tests.functional.tests.CalculatorTest)
java.lang.AssertionError:
Expected: map contains all keys in ["key1", "notkey2"]
     but: was <{key3=val3, key2=val2, key1=val1}>
7) it should fail when value not equal to something (fail)(com.flarestar.bdd.tests.functional.tests.CalculatorTest)
java.lang.AssertionError: Values should be different. Actual: 4
8) it should pass w/ .null() when the value is null (fail)(com.flarestar.bdd.tests.functional.tests.CalculatorTest)
java.lang.AssertionError: expected null, but was:<>
9) it should pass w/ .ok() when a value is ok (fail)(com.flarestar.bdd.tests.functional.tests.CalculatorTest)
java.lang.AssertionError:
Expected: is ok (not null, not empty string, not false and not 0)
     but: was ""
10) it should not throw an exception (fail)(com.flarestar.bdd.tests.functional.tests.CalculatorTest)
com.flarestar.bdd.tests.functional.tests.Calculator$TemperTantrum: waaaaaah!

FAILURES!!!
Tests run: 19,  Failures: 10

